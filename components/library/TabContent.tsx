import React from "react";
import { Animated, StyleSheet, View, Text, TouchableOpacity } from "react-native";

import AnalysticsTab from "./AnalyticsTab/AnalyticsTab";
import DocumentsTab from "./DocumentTab/DocumentTab";
import EmptyState from "./EmptyState";
import GroupsTab from "./GroupTab/GroupTab";
import UploadTab from "./UploadTab/UploadTab";
import { useAuth } from "@/context/authContext";
import { router } from "expo-router";


interface TabContentProps {
    activeTab: string;
    opacityAnimation: Animated.Value;
}

const TabContent = ({ activeTab, opacityAnimation }: TabContentProps) => {
    const { isAuthenticated, login } = useAuth();

    const getUnauthenticatedContent = () => {
        switch (activeTab) {
            case "T√†i li·ªáu":
                return {
                    icon: "üîí",
                    title: "ƒêƒÉng nh·∫≠p ƒë·ªÉ xem t√†i li·ªáu",
                    text: "B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ truy c·∫≠p v√† qu·∫£n l√Ω t√†i li·ªáu c·ªßa m√¨nh",
                };
            case "Nh√≥m":
                return {
                    icon: "üîí",
                    title: "ƒêƒÉng nh·∫≠p ƒë·ªÉ tham gia nh√≥m",
                    text: "B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ tham gia v√† qu·∫£n l√Ω c√°c nh√≥m",
                };
            case "T·∫£i l√™n":
                return {
                    icon: "üîí",
                    title: "ƒêƒÉng nh·∫≠p ƒë·ªÉ t·∫£i l√™n t√†i li·ªáu",
                    text: "B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ t·∫£i l√™n v√† chia s·∫ª t√†i li·ªáu",
                };
            case "Th·ªëng k√™":
                return {
                    icon: "üîí",
                    title: "ƒêƒÉng nh·∫≠p ƒë·ªÉ xem th·ªëng k√™",
                    text: "B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem th·ªëng k√™ ho·∫°t ƒë·ªông c·ªßa m√¨nh",
                };
            default:
                return {
                    icon: "üîí",
                    title: "ƒêƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c",
                    text: "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ s·ª≠ d·ª•ng ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng",
                };
        }
    };

    const getAuthenticatedPlaceholderContent = () => {
        switch (activeTab) {
            case "Nh√≥m":
                return {
                    icon: "üë•",
                    title: "Ch∆∞a tham gia nh√≥m n√†o",
                    text: "C√°c nh√≥m b·∫°n tham gia s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y",
                };
            case "T·∫£i l√™n":
                return {
                    icon: "‚¨ÜÔ∏è",
                    title: "Ch∆∞a c√≥ t√†i li·ªáu t·∫£i l√™n",
                    text: "T√†i li·ªáu b·∫°n ƒë√£ t·∫£i l√™n s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y",
                };
            case "Th·ªëng k√™":
                return {
                    icon: "üìä",
                    title: "Ch∆∞a c√≥ d·ªØ li·ªáu th·ªëng k√™",
                    text: "Th·ªëng k√™ ho·∫°t ƒë·ªông c·ªßa b·∫°n s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y",
                };
            default:
                return {
                    icon: "üì±",
                    title: "N·ªôi dung s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y",
                    text: "Ch·ªçn m·ªôt tab ƒë·ªÉ xem n·ªôi dung",
                };
        }
    };

    const UnauthenticatedState = ({ icon, title, description }: { icon: string; title: string; description: string }) => (
        <View style={styles.emptyStateContainer}>
            <Text style={styles.emptyStateIcon}>{icon}</Text>
            <Text style={styles.emptyStateTitle}>{title}</Text>
            <Text style={styles.emptyStateDescription}>{description}</Text>
            <TouchableOpacity 
                style={styles.loginButton}
                onPress={() => {
                    router.push('/(auth)/login');
                    console.log('Navigate to login screen');
                }}
            >
                <Text style={styles.loginButtonText}>ƒêƒÉng nh·∫≠p ngay</Text>
            </TouchableOpacity>
        </View>
    );

    const renderContent = () => {
        // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, hi·ªÉn th·ªã m√†n h√¨nh y√™u c·∫ßu ƒëƒÉng nh·∫≠p
        if (!isAuthenticated) {
            const content = getUnauthenticatedContent();
            return (
                <UnauthenticatedState
                    icon={content.icon}
                    title={content.title}
                    description={content.text}
                />
            );
        }

        // N·∫øu ƒë√£ ƒëƒÉng nh·∫≠p, hi·ªÉn th·ªã n·ªôi dung b√¨nh th∆∞·ªùng
        switch (activeTab) {
            case "T√†i li·ªáu":
                return <DocumentsTab isActive={true} />;
            case "Nh√≥m":
                return <GroupsTab isActive={true} />;
            case "Th·ªëng k√™":
                return <AnalysticsTab isActive={true} />;
            case "T·∫£i l√™n":
                return <UploadTab isActive={true} />;
            default:
                const content = getAuthenticatedPlaceholderContent();
                return (
                    <EmptyState
                        icon={content.icon}
                        title={content.title}
                        description={content.text}
                    />
                );
        }
    };

    return (
        <Animated.View
            style={[styles.container, { opacity: opacityAnimation }]}
        >
            {renderContent()}
        </Animated.View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: "#f8f9fa",
        paddingHorizontal: 16,
    },
    emptyStateContainer: {
        flex: 1,
        justifyContent: "center",
        alignItems: "center",
        paddingHorizontal: 24,
    },
    emptyStateIcon: {
        fontSize: 64,
        marginBottom: 16,
    },
    emptyStateTitle: {
        fontSize: 20,
        fontWeight: "600",
        color: "#2c3e50",
        textAlign: "center",
        marginBottom: 8,
    },
    emptyStateDescription: {
        fontSize: 16,
        color: "#7f8c8d",
        textAlign: "center",
        lineHeight: 24,
        marginBottom: 24,
    },
    loginButton: {
        backgroundColor: "#3498db",
        paddingHorizontal: 24,
        paddingVertical: 12,
        borderRadius: 8,
        elevation: 2,
        shadowColor: "#000",
        shadowOffset: {
            width: 0,
            height: 2,
        },
        shadowOpacity: 0.1,
        shadowRadius: 4,
    },
    loginButtonText: {
        color: "#fff",
        fontSize: 16,
        fontWeight: "600",
        textAlign: "center",
    },
});

export default TabContent;